#ui

üìå Prop√≥sito: Agrupa todos los elementos de la interfaz de usuario. Contiene pantallas, composici√≥n visual (Jetpack Compose), navegaci√≥n y temas. Esta capa depende de la capa de dominio (a trav√©s de los casos de uso) y muestra datos al usuario o recoge sus interacciones.

üìë Contenido:

navigation/: Carpeta para la configuraci√≥n de rutas de navegaci√≥n.

AppNavigation.kt: Define el NavHost y los destinos de navegaci√≥n entre pantallas.

screens/: Contiene subcarpetas seg√∫n flujos funcionales (actualmente: auth, homeScreen, IndexScreens, sessionScreen).

auth/:

AuthViewModel.kt: ViewModel asociado a la l√≥gica de autenticaci√≥n. Inyecta casos de uso (SignInUseCase, etc.) y expone estados para la UI.

homeScreen/:

homeScreen.kt: Composable de la pantalla principal (despu√©s de ingresar exitosamente).

IndexScreens/:

interScreen.kt y presentationScreen.kt: Composables que representan pantallas de introducci√≥n

sessionScreen/:

loginScreen.kt: Composable para la pantalla de inicio de sesi√≥n.

newAccountScreen.kt: Composable para crear una nueva cuenta (registro).

theme/: Carpeta con definiciones de tema Jetpack Compose (colores, tipograf√≠a, estilos). Contiene archivos como Theme.kt donde se establece el IceManagementTheme.

MainActivity.kt: Actividad principal de la aplicaci√≥n. Aqu√≠ se configura el tema de la app y se inicializa la navegaci√≥n (setContent { IceManagementTheme { AppNavigation() } }).

README.md: Descripci√≥n de la carpeta UI.

üèóÔ∏è Rol en la arquitectura: Esta es la capa de presentaci√≥n. Consume los casos de uso a trav√©s de los ViewModels. Debe mantener l√≥gica m√≠nima y delegar las operaciones de negocio a los UseCases. La navegaci√≥n y el tema tambi√©n se manejan aqu√≠.

Ejemplo de uso: Al abrir la app, MainActivity carga AppNavigation, que dirige a loginScreen. Este composable interact√∫a con AuthViewModel, que internamente llama a SignInUseCase. Seg√∫n el resultado, la navegaci√≥n puede cambiar a homeScreen.